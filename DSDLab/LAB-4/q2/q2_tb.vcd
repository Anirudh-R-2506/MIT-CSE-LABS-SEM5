$date
	Sat Dec 16 14:35:27 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module q2_tb $end
$var wire 16 ! y [0:15] $end
$var reg 1 " e $end
$var reg 4 # w [3:0] $end
$var integer 32 $ i [31:0] $end
$scope module ex1 $end
$var wire 1 " e $end
$var wire 4 % w [3:0] $end
$var wire 16 & y [0:15] $end
$var wire 4 ' temp [0:3] $end
$scope module s0 $end
$var wire 1 " e $end
$var wire 2 ( w [1:0] $end
$var reg 4 ) y [0:3] $end
$upscope $end
$scope module s1 $end
$var wire 1 * e $end
$var wire 2 + w [1:0] $end
$var reg 4 , y [0:3] $end
$upscope $end
$scope module s2 $end
$var wire 1 - e $end
$var wire 2 . w [1:0] $end
$var reg 4 / y [0:3] $end
$upscope $end
$scope module s3 $end
$var wire 1 0 e $end
$var wire 2 1 w [1:0] $end
$var reg 4 2 y [0:3] $end
$upscope $end
$scope module s4 $end
$var wire 1 3 e $end
$var wire 2 4 w [1:0] $end
$var reg 4 5 y [0:3] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 5
b0 4
03
b0 2
b0 1
00
b0 /
b0 .
0-
b1000 ,
b0 +
1*
b1000 )
b0 (
b1000 '
b1000000000000000 &
b0 %
b0 $
b0 #
1"
b1000000000000000 !
$end
#20
b100000000000000 !
b100000000000000 &
b100 ,
b1 +
b1 .
b1 1
b1 4
b1 #
b1 %
b1 $
#40
b10000000000000 !
b10000000000000 &
b10 ,
b10 +
b10 .
b10 1
b10 4
b10 #
b10 %
b10 $
#60
b1000000000000 !
b1000000000000 &
b1 ,
b11 +
b11 .
b11 1
b11 4
b11 #
b11 %
b11 $
#80
b1000 /
1-
0*
b100 '
b100 )
b100000000000 !
b100000000000 &
b0 ,
b1 (
b0 +
b0 .
b0 1
b0 4
b100 #
b100 %
b100 $
#100
b10000000000 !
b10000000000 &
b100 /
b1 +
b1 .
b1 1
b1 4
b101 #
b101 %
b101 $
#120
b1000000000 !
b1000000000 &
b10 /
b10 +
b10 .
b10 1
b10 4
b110 #
b110 %
b110 $
#140
b100000000 !
b100000000 &
b1 /
b11 +
b11 .
b11 1
b11 4
b111 #
b111 %
b111 $
#160
b0 !
b0 &
b0 /
0-
b11 (
b0 '
b0 )
b1111 #
b1111 %
0"
b1000 $
#180
